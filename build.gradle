plugins {
    id "java"
    id "java-library"
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id 'maven-publish'
}

allprojects {
    apply plugin: "fabric-loom"

    version = project.mod_version
    group = project.maven_group

    def targetJavaVersion = 17
    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = "UTF-8"
        if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
            it.options.release = targetJavaVersion
        }
    }

    repositories {
        maven {
            url = "https://maven.terraformersmc.com/releases"
        }
    }

    dependencies {
        // To change the versions see the gradle.properties file
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
        modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

        modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

        include modApi("teamreborn:energy:${project.reborn_energy_version}") {
            transitive = false
        }
    }

    processResources {
        inputs.property "version", project.version
        filteringCharset "UTF-8"

        filesMatching("fabric.mod.json") {
            expand "version": project.version
        }
    }

    jar {
        archiveClassifier.set "dev"
    }

    loom {
        shareCaches()
    }

    java {
        withSourcesJar()
    }
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

repositories {
    maven {
        name = "REI"
        url = "https://maven.shedaniel.me/"
    }
}

dependencies {
    modApi("me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }
    modImplementation("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

//    api project(path: ":techreborn-compatibility", configuration: "namedElements")
//    include project(":techreborn-compatibility")
//    implementation project(path: ":techreborn-compatibility", configuration: "namedElements")
}